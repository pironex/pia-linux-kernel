/*
 * Copyright (C) 2015 pironex GmbH (http://www.pironex.de)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am335x-pia-pm.dtsi"

/ {
	model = "pironex piA-AM3352";
	compatible = "pironex,am335x-pia-base", "pironex,am335x-pia-pm", "ti,am33xx";

	/* cpus: defined in PM */
	/* memory: defined in PM, TODO different memory configurations */

	vcc_3v3_reg: fixedregulator@1 {
		compatible = "regulator-fixed";
		regulator-name = "vcc_3v3_reg";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-max-microamp = <1000000>;
		regulator-boot-on;
		regulator-always-on;
		enable-active-high;
		/*gpio = <&gpio2 23 GPIO_ACTIVE_HIGH>; *//* LDO_EN */
		vin-supply = <&vcc_5v0_in>; /* turned on with vaux2, supplied by vcc_5v0 */
	};

	gsm_vbat_reg: fixedregulator@2 {
		compatible = "regulator-fixed";
		regulator-name = "gsm_vbat_reg";
		regulator-min-microvolt = <4200000>;
		regulator-max-microvolt = <4200000>;
		regulator-max-microamp = <3000000>;
		regulator-boot-on;
		regulator-always-on;
		enable-active-high;
		/*gpio = <&gpio2 2 GPIO_ACTIVE_HIGH>;*/ /* GSM_PWR_EN */
		vin-supply = <&vcc_5v0_in>; /* turned on with vaux2, supplied by vcc_5v0 */
	};

	watchdog: watchdog {
		/* MAX6371 */
		compatible = "linux,wdt-gpio";
		gpios = <&gpio0 12 GPIO_ACTIVE_LOW>;
		hw_algo = "toggle";
		hw_margin_ms = <60000>;
	};

	buttons: gpio_buttons@0 {
		compatible = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;

		switch@1 {
			label = "Key S1 BootMode";
			linux,code = <0x100>;
			gpios = <&gpio2 8 GPIO_ACTIVE_LOW>;
		};
	};
};

&leds {
	led@2 {
		label = "led:red";
		gpios = <&gpio2 3 GPIO_ACTIVE_HIGH>;
		linux,default-trigger = "cpu0";
		default-state = "on";
	};
};

&gpio0 {
	gpio_can0_stb {
		gpio-hog;
		gpios = <22 GPIO_ACTIVE_HIGH>;
		output-low;
		line-name = "can0-stb";
	};

	gpio_gsm_fligthmode {
		gpio-hog;
		gpios = <28 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "gsm-flightmode";
	};
};

&gpio3 {
	gpio_oc1 {
		gpio-hog;
		gpios = <21 GPIO_ACTIVE_LOW>;
		input;
		line-name = "usb0-vbus-oc";
	};
};

&am33xx_pinmux {
	pinctrl-names = "default";
	pinctrl-0 = <&board_pins>;

	board_pins: pinmux_board_pins {
		pinctrl-single,pins = <
			0x028 (PIN_INPUT | MUX_MODE7)		/* PM-OUTPUT: gpmc_ad10.gpio0_26*/
			0x090 (PIN_INPUT_PULLUP | MUX_MODE7)	/* GSM_PWR_EN: gpmc_advn_ale.gpio2_2 */
			0x098 (PIN_INPUT_PULLUP | MUX_MODE7)	/* GSM_PWR_OK: gpmc_wen.gpio2_4 */
			0x0A8 (PIN_INPUT | MUX_MODE7)		/* SYSBOOT2/S2: lcd_data2.gpio2_8 */
			0x0E4 (PIN_INPUT_PULLUP | MUX_MODE7)	/* LDO_EN: lcd_hsync.gpio2_23 
								 * unused since Rev 00.02 */
			0x0EC (PIN_INPUT_PULLUP | MUX_MODE7)	/* GSM_RESET: lcd_ac_bias_en.gpio2_25 */ 
			0x128 (PIN_INPUT | MUX_MODE7)		/* FLIGHT-MODE: mii1_txd0.gpio0_28 
								 * unused since Rev 00.02 */
			0x164 (PIN_INPUT | MUX_MODE7)		/* ISO-IN: ecap0_in_pwm0_out.gpio0_7 */
			0x178 (PIN_OUTPUT | MUX_MODE7)		/* WDI: uart1_ctsn.gpio0_12 */
			0x17C (PIN_OUTPUT | MUX_MODE7)		/* WD_SET2: uart1_rtsn.gpio0_13 */
			0x114 (PIN_INPUT | MUX_MODE7)		/* GSM_STATUS: mii1_txen.gpio3_3 */
			0x1A0 (PIN_INPUT_PULLUP | MUX_MODE7)	/* GSM_PWR_KEY: mcasp0_aclkr.gpio3_18 */
			0x1AC (PIN_INPUT | MUX_MODE7)		/* OC1: mcasp0_ahclkx.gpio3_21 */
			0x1B4 (PIN_INPUT_PULLUP | MUX_MODE7)	/* 3G_INT: xdma_event_intr1.gpio0_20 */
		>;
	};

	cpsw_default: pinmux_cpsw_default {
		pinctrl-single,pins = <
			/* Slave 2 */
			0x040 (PIN_OUTPUT_PULLDOWN | MUX_MODE1)	/* gpmc_a0.gmii2_txen */
			0x044 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_a1.mii2_rxdv */
			0x048 (PIN_OUTPUT_PULLDOWN | MUX_MODE1)	/* gpmc_a2.mii2_txd3 */
			0x04c (PIN_OUTPUT_PULLDOWN | MUX_MODE1)	/* gpmc_a3.mii2_txd2 */
			0x050 (PIN_OUTPUT_PULLDOWN | MUX_MODE1)	/* gpmc_a4.mii2_txd1 */
			0x054 (PIN_OUTPUT_PULLDOWN | MUX_MODE1)	/* gpmc_a5.mii2_txd0 */
			0x058 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_a6.mii2_txclk */
			0x05c (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_a7.mii2_rxclk */
			0x060 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_a8.mii2_rxd3 */
			0x064 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_a9.mii2_rxd2 */
			0x068 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_a10.mii2_rxd1 */
			0x06c (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_a11.mii2_rxd0 */
			0x070 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_wait0.gmii2_crs */
			0x074 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_wpn.gmii2_rxerr */
			0x078 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_be1n.gmii2_col */
		>;
	};

	cpsw_sleep: pinmux_cpsw_sleep {
		pinctrl-single,pins = <
			/* Slave 2 reset value */
			0x040 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x044 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x048 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x04c (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x050 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x054 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x058 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x05c (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x060 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x064 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x068 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x06c (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x070 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x074 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x078 (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	led_pins: pinmux_led {
		pinctrl-single,pins = <
			0x07c (PIN_OUTPUT_PULLDOWN | MUX_MODE7)	/* LED1 gpmc_csn0.gpio1_29 */
			0x094 (PIN_OUTPUT_PULLDOWN | MUX_MODE7)	/* LED2 gpmc_oen_ren.gpio2_3 */
		>;
	};

	davinci_mdio_default: pinmux_mdio_default {
		pinctrl-single,pins = <
			/* MDIO */
			0x148 (PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE0)	/* mdio_data.mdio_data */
			0x14c (PIN_OUTPUT_PULLUP | MUX_MODE0)			/* mdio_clk.mdio_clk */
		>;
	};

	davinci_mdio_sleep: pinmux_mdio_sleep {
		pinctrl-single,pins = <
			/* MDIO reset value */
			0x148 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x14c (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	dcan0_pins: pinmux_dcan0_pins {
		pinctrl-single,pins = <
			0x020 (PIN_OUTPUT_PULLUP | MUX_MODE7) /* CAN0_STB: gpmc_ad8.gpio0_22 */
			0x11C (PIN_OUTPUT | MUX_MODE1)	/* mii1_txd3.dcan0_tx */
			0x120 (PIN_INPUT | MUX_MODE1)	/* mii1_txd2.dcan0_rx */
		>;
	};

	dcan1_pins: pinmux_dcan1_pins {
		pinctrl-single,pins = <
			0x180 (PIN_OUTPUT | MUX_MODE2)	/* uart1_rxd.dcan1_tx */
			0x184 (PIN_INPUT | MUX_MODE2)	/* uart1_txd.dcan1_rx */
			0x0E8 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* CAN1_RES: lcd_pclk.gpio2_24 */
		>;
	};

	mmc1_pins: pinmux_mmc1_pins {
		pinctrl-single,pins = <
			0x0f0 (PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc0_dat0.mmc0_dat0 */
			0x0f4 (PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc0_dat1.mmc0_dat1 */
			0x0f8 (PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc0_dat2.mmc0_dat2 */
			0x0fc (PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc0_dat3.mmc0_dat3 */
			0x100 (PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc0_clk.mmc0_clk */
			0x104 (PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc0_cmd.mmc0_cmd */
			0x118 (PIN_INPUT_PULLUP | MUX_MODE7)	/* mii1_rxdv.gpio3_4 */
		>;
	};

	uart2_pins: pinmux_uart2_pins {
		pinctrl-single,pins = <
			/* 0x0C0 (PIN_INPUT_PULLUP | MUX_MODE6) */	/* lcd_data8.uart2_ctsn */
			/* 0x0C4 (PIN_OUTPUT | MUX_MODE6) */	/* lcd_data9.uart2_rtsn */
			0x12C (PIN_INPUT_PULLUP | MUX_MODE1)	/* mii1_txclk.uart2_rxd */
			0x130 (PIN_OUTPUT_PULLDOWN | MUX_MODE1)	/* mii1_rxclk.uart2_txd */
			0x19C (PIN_INPUT_PULLUP | MUX_MODE7)	/* UART2.RI: mcasp0_ahclkr.gpio3_17 */
			0x1A4 (PIN_INPUT | MUX_MODE7)	/* UART2.DTR: mcasp0_fsr.gpio3_19 */
		>;
	};

	uart3_pins: pinmux_uart3_pins {
		pinctrl-single,pins = <
			0x02C (PIN_INPUT_PULLDOWN | MUX_MODE7)	/* RES gpmc_ad11.gpio0_27 */
			0x0CC (PIN_OUTPUT | MUX_MODE7)		/* RTSn lcd_data11.gpio2_17 */
			/*0x0CC (PIN_INPUT | MUX_MODE6)*/		/* RTSn lcd_data11.uart3_rtsn */
			0x134 (PIN_INPUT_PULLUP | MUX_MODE1)	/* mii1_rxd3.uart3_rxd */
			0x138 (PIN_OUTPUT_PULLDOWN | MUX_MODE1)	/* mii1_rxd2.uart3_txd */
		>;
	};

	uart4_pins: pinmux_uart4_pins {
		pinctrl-single,pins = <
			0x168 (PIN_INPUT_PULLUP | MUX_MODE1)	/* uart0_rxd.uart4_rxd */
			0x16C (PIN_OUTPUT_PULLDOWN | MUX_MODE1)	/* uart0_txd.uart4_txd */
		>;
	};

	uart5_pins: pinmux_uart5_pins {
		pinctrl-single,pins = <
			0x0E0 (PIN_INPUT_PULLUP | MUX_MODE7)	/* nINVALID lcd_vsync.gpio2_22 */
			0x108 (PIN_INPUT_PULLUP | MUX_MODE3)	/* mii1_col.uart5_rxd */
			0x144 (PIN_OUTPUT_PULLDOWN | MUX_MODE3)	/* rmii1_refclk.uart5_txd */
		>;
	};

	usb0_pins: pinmux_usb0_pins {
		pinctrl-single,pins = <
			0x21c (PIN_OUTPUT | MUX_MODE7)	/* usb0_drvvbus.usb0_drvvbus */
		>;
	};

	usb1_pins: pinmux_usb1_pins {
		pinctrl-single,pins = <
			0x234 (PIN_OUTPUT | MUX_MODE0)	/* usb1_drvvbus.usb1_drvvbus */
		>;
	};
};

&dcan0 {
	pinctrl-names = "default";
	pinctrl-0 = <&dcan0_pins>;
	/* TODO is there a ways to provide a -supply? */

	status = "okay";
};

&dcan1 {
	pinctrl-names = "default";
	pinctrl-0 = <&dcan1_pins>;

	status = "okay";
};

&mac {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&cpsw_default>;
	pinctrl-1 = <&cpsw_sleep>;
	active_slave = <1>; /* only MII2 connected */

	status = "okay";
};

&davinci_mdio {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&davinci_mdio_default>;
	pinctrl-1 = <&davinci_mdio_sleep>;

	status = "okay";
};

&cpsw_emac1 {
	phy_id = <&davinci_mdio>, <0>;
	phy-mode = "mii";
};

&i2c1 {
	mma8452@1C {
		compatible = "fsl,mma8452";
		reg = <0x1C>;
		interrupt-parent = <&gpio0>;
		interrupts = <20 2>; /* low flank */
	};
};

/* uSD */
&mmc1 {
	vmmc-supply = <&vmmc_reg>;
	bus-width = <4>; /* 4 data lines */
	pinctrl-names = "default";
	pinctrl-0 = <&mmc1_pins>;
	cd-gpios = <&gpio3 4 GPIO_ACTIVE_LOW>;

	status = "okay";
};

&tscadc {
	status = "okay";

	/*tsc { };*/
	adc {
		ti,adc-channels = <6>;
		ti,chan-step-avg = <16>;
	};
};

/* SIMCOM GSM AT */
&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart2_pins>;

	status = "okay";
};

/* RS485 */
&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart3_pins>;

	rts-gpio = <&gpio2 17 GPIO_ACTIVE_HIGH>;
	rs485-rts-active-high;
	rs485-rts-delay = <1 0>;
	linux,rs485-enabled-at-boot-time;

	status = "okay";
};

/* SIMCOM GPS NMEA */
&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart4_pins>;

	status = "okay";
};

/* RS232 */
&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart5_pins>;

	status = "okay";
};

&usb {
	status = "okay";
};

&usb_ctrl_mod {
	status = "okay";
};

&usb0_phy {
	pinctrl-names = "default";
	pinctrl-0 = <&usb0_pins>;

	status = "okay";
};

&usb1_phy {
	pinctrl-names = "default";
	pinctrl-0 = <&usb1_pins>;

	vcc-supply = <&gsm_vbat_reg>;

	status = "okay";
};

&usb0 {
	status = "okay";
	dr_mode = "host";
};

&usb1 {
	status = "okay";
	dr_mode = "host";
};

&cppi41dma  {
	status = "okay";
};
