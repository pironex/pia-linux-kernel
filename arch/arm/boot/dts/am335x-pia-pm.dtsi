/*
 * Copyright (C) 2015 pironex GmbH (http://www.pironex.de)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include "am33xx.dtsi"

/ {
	model = "pironex piA-AM335x-PM";
	compatible = "pironex,am335x-pia-pm", "ti,am33xx";

	cpus {
		cpu@0 {
			/* CPU supply "vdd_mpu" */
			cpu0-supply = <&vdd1_reg>;
		};
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x10000000>; /* 256 MB */
	};

	vcc_5v0_in: fixedregulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "vcc_5v0_in";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-boot-on;
	};

	leds: leds {
		pinctrl-names = "default";
		pinctrl-0 = <&led_pins>;

		compatible = "gpio-leds";

		led@1 {
			label = "led:green";
			gpios = <&gpio1 29 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "on";
		};
	};
};

&am33xx_pinmux {
	pinctrl-names = "default";

	led_pins: pinmux_led {
		pinctrl-single,pins = <
			0x7c (PIN_OUTPUT_PULLDOWN | MUX_MODE7)	/* gpmc_csn0.gpio1_29 */
		>;
	};

	flash_pins: pinmux_flash_pins {
		pinctrl-single,pins = <
			0x13c (PIN_INPUT_PULLUP | MUX_MODE7)	/* NOR_WPn: mii1_rxd1.gpio2_20 */
			0x140 (PIN_INPUT_PULLUP | MUX_MODE7)	/* NOR_RESn: mii1_rxd0.gpio_2_21 */
		>;
	};

	/* I2C Bus 0 */
	i2c0_pins: pinmux_i2c0_pins {
		pinctrl-single,pins = <
			0x188 (PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_sda.i2c0_sda */
			0x18c (PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_scl.i2c0_scl */
		>;
	};

	i2c1_pins: pinmux_i2c1_pins {
		pinctrl-single,pins = <
			0x10c (PIN_INPUT_PULLUP | MUX_MODE3)	/* i2c0_sda.i2c0_sda */
			0x110 (PIN_INPUT_PULLUP | MUX_MODE3)	/* i2c0_scl.i2c0_scl */
		>;
	};

	/* eMMC on 2nd MMC bus */
	mmc2_pins: pinmux_mmc2_pins {
		pinctrl-single,pins = <
			0x80 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn1.mmc1_clk */
			0x84 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn2.mmc1_cmd */
			0x00 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad0.mmc1_dat0 */
			0x04 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad1.mmc1_dat1 */
			0x08 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad2.mmc1_dat2 */
			0x0c (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad3.mmc1_dat3 */
			0x10 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad4.mmc1_dat4 */
			0x14 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad5.mmc1_dat5 */
			0x18 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad6.mmc1_dat6 */
			0x1c (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad7.mmc1_dat7 */
			/* reset GPIO */
			/*0x9c (PIN_INPUT_PULLUP | MUX_MODE7)*/ /* gpmc_be0n_cle.gpio2_5 */
		>;
	};

	spi0_pins: pinmux_spi0 {
		pinctrl-single,pins = <
			0x150 (PIN_INPUT_PULLUP | MUX_MODE0) /* spi0_sclk.spi0_sclk */
			0x154 (PIN_OUTPUT | MUX_MODE0) /* spi0_d0.spi0_d0 */
			0x158 (PIN_INPUT_PULLUP | MUX_MODE0) /* spi0_d1.spi0_d1 */
			0x15C (PIN_OUTPUT | MUX_MODE0) /* spi0_cs0.spi0_cs0 */
		>;
	};

	tps_pins: pinmux_tps {
		pinctrl-single,pins = <
			0x124 (PIN_INPUT_PULLUP | MUX_MODE7)	/* mii1_txd1.gpio0_21 */
		>;
	};

	/* Debug UART - not on PM but fixed as UART on baseboard */
	uart0_pins: pinmux_uart0_pins {
		pinctrl-single,pins = <
			0x170 (PIN_INPUT_PULLUP | MUX_MODE0)	/* uart0_rxd.uart0_rxd */
			0x174 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* uart0_txd.uart0_txd */
		>;
	};

};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;
	clock-frequency = <400000>; /* 400 kHz */

	status = "okay";

	/* TPS65910 PMIC */
	tps: tps@2d {
		reg = <0x2d>;
	};

	/* 24AA02E48 EEPROM with UID */
	eeprom@50 {
		compatible = "atmel,24c01";
		reg = <0x50>;
		pagesize = <8>;
	};

	/* TODO add missing devices */
};

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;
	clock-frequency = <400000>; /* 400 kHz */

	status = "okay";

	/* 24AA02E48 EEPROM with UID */
	expeeprom@50 {
		compatible = "atmel,24c01";
		reg = <0x50>;
		pagesize = <8>;
	};
};

&rtc {
	/* RTC is used from TPS, make sure it is rtc0 */
	status = "disabled";
};

&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_pins>;
	ti,pindir-d0-out-d1-in;

	status = "okay";

	flash: m25p80@0 {
		/* TODO must be configured as a module for now, otherwise
		 * the JEDEC id read fails for some unknown reason. 
		 * The first 4-5 bits of the ID come as 1 resulting in
		 * a manufacurer ID of f9 or f1 instead of the expected 01 */
		pinctrl-names = "default";
		pinctrl-0 = <&flash_pins>;

		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "s25fl128s", "jedec,spi-nor";
		m25p,fast-read;
		spi-max-frequency = <24000000>;
		reg = <0>;

		partition@0 {
			label = "SPL";
			reg = <0x00000000 0x00040000>; /* 1 sector */
			read-only;
		};
		partition@1 {
			label = "UBoot";
			reg = <0x00040000 0x00080000>; /* 2 sector */
			read-only;
		};
		partition@2 {
			label = "env";
			reg = <0x000c0000 0x00040000>; /* 1 sector */
			read-only;
		};
		partition@3 {
			label = "Kernel";
			reg = <0x00100000 0x00500000>; /* 20 sectors */
		};
		partition@4 {
			label = "System";
			reg = <0x00500000 0x00A00000>; /* 40 sectors */
		};
	};
};

/* Debug UART */
&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;

	status = "okay";
};

/* TPS65910 base configuration in tps65910.dtsi */
#include "tps65910.dtsi"

/* TPS65910 board specific configuration */ 
&tps {
	pinctrl-names = "default";
	pinctrl-0 = <&tps_pins>;

	interrupt-parent = <&gpio0>;
	interrupts = <21 2>; /* low flank */

	ti,en-ck32k-xtal;
	/* would do a reset on powerdown
	 * ti,system-power-controller; */

	vcc1-supply = <&vcc_5v0_in>;
	vcc2-supply = <&vcc_5v0_in>;
	vcc3-supply = <&vcc_5v0_in>;
	vcc4-supply = <&vcc_5v0_in>;
	vcc5-supply = <&vcc_5v0_in>;
	vcc6-supply = <&vcc_5v0_in>;
	vcc7-supply = <&vcc_5v0_in>;
	vccio-supply = <&vcc_5v0_in>;

	regulators {
		vrtc_reg: regulator@0 {
			regulator-always-on;
		};

		/* DDR3 IO voltage */
		vio_reg: regulator@1 {
			regulator-always-on;
		};

		vdd1_reg: regulator@2 {
			/* VDD_MPU voltage limits 0.95V - 1.26V with +/-4% tolerance 
			 * controlled by cpufreq */
			regulator-name = "vdd_mpu";
			regulator-min-microvolt = <912500>;
			regulator-max-microvolt = <1351500>;
			regulator-boot-on;
			regulator-always-on;
		};

		vdd2_reg: regulator@3 {
			/* VDD_CORE voltage limits 0.95V - 1.1V with +/-4% tolerance */
			regulator-name = "vdd_core";
			regulator-min-microvolt = <912500>;
			regulator-max-microvolt = <1150000>;
			regulator-boot-on;
			regulator-always-on;
		};

		vdd3_reg: regulator@4 {
			regulator-always-on;
		};

		vdig1_reg: regulator@5 {
			/* VDIG1 is not used on PM
			 * not setting always-on should disable the regulator after init */
			/* regulator-always-on; */
		};

		vdig2_reg: regulator@6 {
			regulator-always-on;
		};

		vpll_reg: regulator@7 {
			regulator-always-on;
		};

		vdac_reg: regulator@8 {
			regulator-always-on;
		};

		vaux1_reg: regulator@9 {
			regulator-always-on;
		};

		vaux2_reg: regulator@10 {
			regulator-always-on;
		};

		vaux33_reg: regulator@11 {
			regulator-always-on;
		};

		vmmc_reg: regulator@12 {
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		vbb_reg: regulator@13 {
			regulator-min-microvolt = <3150000>;
			regulator-max-microvolt = <3150000>;
			regulator-always-on;
		};
	};
};

/* eMMC */
&mmc2 {
	vmmc-supply = <&vmmc_reg>;
	bus-width = <8>;
	pinctrl-names = "default";
	pinctrl-0 = <&mmc2_pins>;
	ti,non-removable;

	status = "okay"; /* present on PM module */
};

&sham {
	status = "okay";
};

&aes {
	status = "okay";
};

&wkup_m3_ipc {
	ti,scale-data-fw = "am335x-evm-scale-data.bin";
};
